{
  "name": "debugger-for-krom",
  "displayName": "Debugger for Krom",
  "version": "17.9.1",
  "icon": "images/icon.png",
  "description": "Debug your JavaScript code in Krom.",
  "repository": {
    "type": "git",
    "url": "https://github.com/Kode/vscode-krom-debug"
  },
  "publisher": "kodetech",
  "engines": {
    "vscode": "^1.8.0"
  },
  "categories": [
    "Debuggers"
  ],
  "license": "SEE LICENSE IN LICENSE.txt",
  "main": "./out/extension",
  "activationEvents": [
    "onCommand:extension.krom-debug.startSession",
    "onCommand:extension.krom-debug.toggleSkippingFile"
  ],
  "contributes": {
    "breakpoints": [
      {
        "language": "javascript"
      },
      {
        "language": "typescriptreact"
      },
      {
        "language": "javascriptreact"
      },
      {
        "language": "fsharp"
      },
      {
        "language": "haxe"
      }
    ],
    "debuggers": [
      {
        "type": "krom",
        "label": "Krom",
        "program": "./out/chromeDebug.js",
        "runtime": "node",
        "aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
        "languages": [
          "javascript",
          "typescript",
          "javascriptreact",
          "typescriptreact"
        ],
        "startSessionCommand": "extension.krom-debug.startSession",
        "variables": {
          "FindKha": "kha.findKha",
          "FindFFMPEG": "kha.findFFMPEG",
          "FindKrom": "krom.findKrom"
        },
        "initialConfigurations": [
          {
            "type": "chrome",
            "request": "launch",
            "name": "Launch Chrome against localhost",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceRoot}"
          },
          {
            "type": "chrome",
            "request": "attach",
            "name": "Attach to Chrome",
            "port": 9222,
            "webRoot": "${workspaceRoot}"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Chrome: Launch",
            "description": "Launch Chrome to debug a URL",
            "body": {
              "type": "chrome",
              "request": "launch",
              "name": "${2:Launch Chrome}",
              "url": "http://localhost:8080",
              "webRoot": "^\"\\${workspaceRoot}\""
            }
          }
        ],
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "port": {
                "type": "number",
                "description": "Port to use for Chrome remote debugging.",
                "default": 9222
              },
              "address": {
                "type": "string",
                "description": "TCP/IP address of debug port",
                "default": "127.0.0.1"
              },
              "file": {
                "type": "string",
                "description": "A local html file to open in the browser",
                "default": "${workspaceRoot}/index.html"
              },
              "url": {
                "type": "string",
                "description": "A url to open in the browser",
                "default": "http://localhost:8080"
              },
              "webRoot": {
                "type": "string",
                "description": "When the 'url' field is specified, this specifies the workspace absolute path to the webserver root. Shorthand for a pathMapping for \"/\"",
                "default": "${workspaceRoot}"
              },
              "pathMapping": {
                "type": "object",
                "description": "A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk",
                "default": {
                  "/": "${workspaceRoot}"
                }
              },
              "runtimeExecutable": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Workspace absolute path to the runtime executable to be used. If not specified, Chrome will be used from the default install location.",
                "default": null
              },
              "runtimeArgs": {
                "type": "array",
                "description": "Optional arguments passed to the runtime executable.",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "sourceMaps": {
                "type": "boolean",
                "description": "Use JavaScript source maps (if they exist).",
                "default": true
              },
              "diagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs its own diagnostic info to the console in a human readable format",
                "default": true,
                "deprecationMessage": "'diagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "verboseDiagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')",
                "default": true,
                "deprecationMessage": "'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "trace": {
                "type": [
                  "boolean",
                  "string"
                ],
                "enum": [
                  "verbose",
                  true
                ],
                "default": true,
                "description": "When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."
              },
              "userDataDir": {
                "type": [
                  "string",
                  "boolean"
                ],
                "description": "By default, Chrome is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.",
                "default": ""
              },
              "sourceMapPathOverrides": {
                "type": "object",
                "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.",
                "default": {
                  "webpack:///*": "*",
                  "webpack:///./*": "${webRoot}/*",
                  "webpack:///src/*": "${webRoot}/*",
                  "webpack:///./~/*": "${webRoot}/node_modules/*"
                }
              },
              "smartStep": {
                "type": "boolean",
                "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                "default": true
              },
              "skipFiles": {
                "type": "array",
                "description": "An array of file or folder names, or path globs, to skip when debugging.",
                "default": []
              },
              "timeout": {
                "type": "number",
                "description": "Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.",
                "default": 10000
              },
              "disableNetworkCache": {
                "type": "boolean",
                "description": "Controls whether to skip the network cache for each request",
                "default": true
              },
              "urlFilter": {
                "type": "string",
                "description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
                "default": ""
              },
              "showAsyncStacks": {
                "type": "boolean",
                "description": "Show the async calls that led to the current call stack",
                "default": true
              }
            }
          },
          "attach": {
            "required": [
              "port"
            ],
            "properties": {
              "port": {
                "type": "number",
                "description": "Port to use for Chrome remote debugging.",
                "default": 9222
              },
              "address": {
                "type": "string",
                "description": "TCP/IP address of debug port",
                "default": "127.0.0.1"
              },
              "sourceMaps": {
                "type": "boolean",
                "description": "Use JavaScript source maps (if they exist).",
                "default": true
              },
              "diagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs its own diagnostic info to the console in a human readable format",
                "default": true,
                "deprecationMessage": "'diagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "verboseDiagnosticLogging": {
                "type": "boolean",
                "description": "When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')",
                "default": true,
                "deprecationMessage": "'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "trace": {
                "type": [
                  "boolean",
                  "string"
                ],
                "enum": [
                  "verbose",
                  true
                ],
                "default": true,
                "description": "When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."
              },
              "url": {
                "type": "string",
                "description": "Will search for a tab with this EXACT url and attach to it, if found",
                "default": "http://localhost:8080"
              },
              "webRoot": {
                "type": "string",
                "description": "This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"",
                "default": "${workspaceRoot}"
              },
              "pathMapping": {
                "type": "object",
                "description": "A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk",
                "default": {}
              },
              "sourceMapPathOverrides": {
                "type": "object",
                "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.",
                "default": {}
              },
              "smartStep": {
                "type": "boolean",
                "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                "default": true
              },
              "skipFiles": {
                "type": "array",
                "description": "An array of file or folder names, or path globs, to skip when debugging.",
                "default": []
              },
              "timeout": {
                "type": "number",
                "description": "Retry for this number of milliseconds to connect to Chrome. Default is 10000 ms.",
                "default": 10000
              },
              "disableNetworkCache": {
                "type": "boolean",
                "description": "Controls whether to skip the network cache for each request",
                "default": true
              },
              "urlFilter": {
                "type": "string",
                "description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
                "default": ""
              },
              "showAsyncStacks": {
                "type": "boolean",
                "description": "Show the async calls that led to the current call stack",
                "default": true
              }
            }
          }
        }
      }
    ],
    "menus": {
      "debug/callstack/context": [
        {
          "command": "extension.krom-debug.toggleSkippingFile",
          "group": "navigation",
          "when": "inDebugMode && debugType == 'chrome'"
        }
      ]
    },
    "commands": [
      {
        "command": "extension.krom-debug.toggleSkippingFile",
        "title": "Toggle Skipping This File"
      }
    ],
    "keybindings": [
      {
        "command": "extension.node-debug.pickLoadedScript",
        "key": "ctrl+f4",
        "mac": "cmd+f4",
        "when": "debugType == 'chrome'"
      }
    ]
  },
  "extensionDependencies": [
    "robdangerous.kha",
    "robdangerous.krom"
  ]
}
